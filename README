SimpleMLCompiler
================

Compiler for a subset of ML

Reference :
  This project is part of a course taught at the Ecole polytechnique on the subject
of software verification. For more information please visit the web page of the course
http://www.enseignement.polytechnique.fr/informatique/INF565/
or the web page for this project
http://www.enseignement.polytechnique.fr/informatique/INF565/projets/projet-ml.html

How to use :
  A Makefile is given to automatically compile the whole project. Run make to
build the compiler, make test to run the compiler on the provided set of tests
located in the test folder.

  The compiler is at the time being able to parse the subset of the ML syntax
that was chosen for this project, to transform it into an abstract tree where
variables are represented by the De Bruijn indexes, and to interpret the program
to output its result.

  I am currently working on the implementation of a type system for this subset of ML
and on the transformation of the resulting abstract tree to an expression that can
be interpreted by the abstract machine described on the project page. I expect to
have finished these implementation on the day of the final submission.

Notes :
  * Automatic compilation requires ocamlfind from findlib
